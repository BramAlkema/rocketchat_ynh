{"version":3,"sources":["meteor://ðŸ’»app/server/stream/streamBroadcast.coffee"],"names":[],"mappings":"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","file":"/server/stream/streamBroadcast.coffee.js","sourcesContent":["logger = new Logger 'StreamBroadcast',\n\tsections:\n\t\tconnection: 'Connection'\n\t\tauth: 'Auth'\n\t\tstream: 'Stream'\n\nauthorizeConnection = (connection) ->\n\tlogger.auth.info \"Authorizing with localhost:#{connection.instanceRecord.extraInformation.port}\"\n\tconnection.call 'broadcastAuth', connection.instanceRecord._id, InstanceStatus.id(), (err, ok) ->\n\t\tconnection.broadcastAuth = ok\n\t\tlogger.auth.info \"broadcastAuth with localhost:#{connection.instanceRecord.extraInformation.port}\", ok\n\n@connections = {}\n@startStreamBroadcast = () ->\n\tlogger.info 'startStreamBroadcast'\n\n\t# connections = {}\n\n\tInstanceStatus.getCollection().find({'extraInformation.port': {$exists: true}}, {sort: {_createdAt: -1}}).observe\n\t\tadded: (record) ->\n\t\t\tif record.extraInformation.port is process.env.PORT\n\t\t\t\treturn\n\n\t\t\tif connections[record.extraInformation.port]?.instanceRecord?\n\t\t\t\tif connections[record.extraInformation.port].instanceRecord._createdAt < record._createdAt\n\t\t\t\t\tconnections[record.extraInformation.port].disconnect()\n\t\t\t\t\tdelete connections[record.extraInformation.port]\n\t\t\t\telse\n\t\t\t\t\treturn\n\n\t\t\tlogger.connection.info 'connecting in', \"localhost:#{record.extraInformation.port}\"\n\t\t\tconnections[record.extraInformation.port] = DDP.connect(\"localhost:#{record.extraInformation.port}\", {_dontPrintErrors: true})\n\t\t\tconnections[record.extraInformation.port].instanceRecord = record;\n\t\t\tauthorizeConnection(connections[record.extraInformation.port]);\n\t\t\tconnections[record.extraInformation.port].onReconnect = ->\n\t\t\t\tauthorizeConnection(connections[record.extraInformation.port]);\n\n\t\tremoved: (record) ->\n\t\t\tif connections[record.extraInformation.port]? and not InstanceStatus.getCollection().findOne({'extraInformation.port': record.extraInformation.port})?\n\t\t\t\tlogger.connection.info 'disconnecting from', \"localhost:#{record.extraInformation.port}\"\n\t\t\t\tconnections[record.extraInformation.port].disconnect()\n\t\t\t\tdelete connections[record.extraInformation.port]\n\n\tbroadcast = (streamName, eventName, args, userId) ->\n\t\tfor port, connection of connections\n\t\t\tdo (port, connection) ->\n\t\t\t\tif connection.status().connected is true\n\t\t\t\t\tconnection.call 'stream', streamName, eventName, args, (error, response) ->\n\t\t\t\t\t\tif error?\n\t\t\t\t\t\t\tlogger.error \"Stream broadcast error\", error\n\n\t\t\t\t\t\tswitch response\n\t\t\t\t\t\t\twhen 'self-not-authorized'\n\t\t\t\t\t\t\t\tlogger.stream.error \"Stream broadcast from:#{process.env.PORT} to:#{connection._stream.endpoint} with name #{streamName} to self is not authorized\".red\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection authorized\".red, connection.broadcastAuth\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection status\".red, connection.status()\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> arguments\".red, eventName, args\n\n\t\t\t\t\t\t\twhen 'not-authorized'\n\t\t\t\t\t\t\t\tlogger.stream.error \"Stream broadcast from:#{process.env.PORT} to:#{connection._stream.endpoint} with name #{streamName} not authorized\".red\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection authorized\".red, connection.broadcastAuth\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection status\".red, connection.status()\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> arguments\".red, eventName, args\n\t\t\t\t\t\t\t\tauthorizeConnection(connection);\n\n\t\t\t\t\t\t\twhen 'stream-not-exists'\n\t\t\t\t\t\t\t\tlogger.stream.error \"Stream broadcast from:#{process.env.PORT} to:#{connection._stream.endpoint} with name #{streamName} does not exists\".red\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection authorized\".red, connection.broadcastAuth\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> connection status\".red, connection.status()\n\t\t\t\t\t\t\t\tlogger.stream.debug \"    -> arguments\".red, eventName, args\n\n\n\tMeteor.methods\n\t\tshowConnections: ->\n\t\t\tdata = {}\n\t\t\tfor port, connection of connections\n\t\t\t\tdata[port] =\n\t\t\t\t\tstatus: connection.status()\n\t\t\t\t\tbroadcastAuth: connection.broadcastAuth\n\t\t\treturn data\n\n\tMeteor.StreamerCentral.on 'broadcast', (streamName, eventName, args) ->\n\t\tbroadcast streamName, eventName, args\n\n\tMeteor.methods\n\t\tbroadcastAuth: (selfId, remoteId) ->\n\t\t\tcheck selfId, String\n\t\t\tcheck remoteId, String\n\n\t\t\t@unblock()\n\t\t\tif selfId is InstanceStatus.id() and remoteId isnt InstanceStatus.id() and InstanceStatus.getCollection().findOne({_id: remoteId})?\n\t\t\t\t@connection.broadcastAuth = true\n\n\t\t\treturn @connection.broadcastAuth is true\n\n\t\tstream: (streamName, eventName, args) ->\n\t\t\t# Prevent call from self and client\n\t\t\tif not @connection?\n\t\t\t\treturn 'self-not-authorized'\n\n\t\t\t# Prevent call from unauthrorized connections\n\t\t\tif @connection.broadcastAuth isnt true\n\t\t\t\treturn 'not-authorized'\n\n\t\t\tif not Meteor.StreamerCentral.instances[streamName]?\n\t\t\t\treturn 'stream-not-exists'\n\n\t\t\tMeteor.StreamerCentral.instances[streamName]._emit(eventName, args)\n\n\t\t\treturn undefined\n\n\nMeteor.startup ->\n\tstartStreamBroadcast()\n"]}